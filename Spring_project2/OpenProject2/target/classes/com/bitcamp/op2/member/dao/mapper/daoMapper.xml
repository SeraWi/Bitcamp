<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="com.bitcamp.op2.member.dao.Dao">
 <!--인터페이스의 fullname을 namespace로 설정해야 한다
 	com.bitcamp.op2.member.dao -> 패키지
 	Dao ->인터페이스 
   -->
   <!-- Select 의 결과를 매핑하는 설정 -->
   <resultMap id="memberListResult"
   			type="com.bitcamp.op2.member.domain.Member">
   		<id column="idx" property="idx"/>
		<result column="memberid" property="memberid"/>   	
		<result column="membername" property="membername"/>
		<!-- <result column="password" property="password"/> -->
		<result column="memberphoto" property="memberphoto"/>	
		<result column="regdate" property="regdate"/>
   </resultMap>
 
  	<!--SQL tag 식별(id)은 인터페이스의 메소드 이름과 일치시킨다.  -->
 	<!--로그인을 위한 select  -->
 	<select id="selectByIdPw"
			resultType="com.bitcamp.op2.member.domain.Member"
 	>
 	select * from member where memberid=#{param1} and password=#{param2} 
 	</select>
 	
 	<!--아이디체크  -->
 	<!--파라미터 하나면 parametertype쓸 필요 없다.  -->
 	<select id="selectById"
 			resultType="int"
 	>
	select count(*) from member where memberid=#{mid} 	
 	</select>
 	
 	<!--회원가입  -->
 	<insert id="insertMember"
 			parameterType="com.bitcamp.op2.member.domain.Member"
 			useGeneratedKeys="true"
 			keyProperty="idx"
 	>
 	insert into member (memberid,password,membername,memberphoto) 
 	values (#{memberid},#{password},#{membername},#{memberphoto})
 	</insert>
 	
 	<!-- 회원 정보 수정 -->
 	<update id="updateMember"
 			parameterType="com.bitcamp.op2.member.domain.Member"
 	>
 		update member
 		set membername =#{membername}
 		where idx =#{idx}
 	</update>
 	
 	<!-- 회원 삭제 / 회원탈퇴 -->
 	<delete id="deleteMember">
 	delete from member where idx= #{idx}
 	</delete>
 	
 	
 	<!-- 전체 회원 리스트 -->
	<select id="selectAll"
			resultType="com.bitcamp.op2.member.domain.Member"
	>
		select * from member order by idx
	</select>
	
	<!-- resultMap 을 이용하여 회원리스트 -->
<!-- 	<select id="selectAll"
			resultMap="memberListResult"
	>
	</select>  -->
	
	
 	
 	<!-- 페이징 처리가 가능한 회원 리스트 -->
 	<select id="selectList"
 			resultType="com.bitcamp.op2.member.domain.Member"
 	>
 	select * from member order by memberid limit (#{param1}, #{param2})
 	</select>
 	
 	<!-- 전체 회원 가져오기 -->
 	<select id="selectTotalCount"
 			resultType="int"
 	>
	select count(*) from member 	
 	</select>
 	
 	
 	<!-- 검색을 통한 회원 리스트가져오기  -->
 	<select id="selectMember"
 			parameterType="com.bitcamp.op2.member.domain.SearchType"
 			resultType="com.bitcamp.op2.member.domain.Member"
 	>
 	<!-- 1.아이디검색 2. 이름 검색 3. 아이디+이름 -->
 	select * from member 
 	
 	<where>
 		<if test="searchType == 'id'">
 			memberid like concat('%',#{keyword},'%')
 		</if>
 		<if test="searchType == 'name'">
 			membername like concat('%',#{keyword},'%')
 		</if>
 		<if test="searchType == 'both'">
 			memberid like concat('%',#{keyword},'%') or membername like concat('%',#{keyword},'%')
 		</if>
 	</where>
 	</select>
 	
 	
 </mapper>